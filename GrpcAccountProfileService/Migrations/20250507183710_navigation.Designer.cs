// <auto-generated />
using GrpcAccountProfileService.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrpcAccountProfileService.Migrations
{
    [DbContext(typeof(AccountProfileContext))]
    [Migration("20250507183710_navigation")]
    partial class navigation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrpcAccountProfileService.Entities.AccountProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountProfiles");
                });

            modelBuilder.Entity("GrpcAccountProfileService.Entities.AccountProfileAddress", b =>
                {
                    b.Property<string>("AccountProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountProfileId");

                    b.ToTable("AccountProfileAddresses");
                });

            modelBuilder.Entity("GrpcAccountProfileService.Entities.AccountProfileAddress", b =>
                {
                    b.HasOne("GrpcAccountProfileService.Entities.AccountProfile", "AccountProfile")
                        .WithOne("Address")
                        .HasForeignKey("GrpcAccountProfileService.Entities.AccountProfileAddress", "AccountProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountProfile");
                });

            modelBuilder.Entity("GrpcAccountProfileService.Entities.AccountProfile", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
